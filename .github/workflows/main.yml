name: CI Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Cache
        uses: actions/cache@v4.2.3
        with:
          # A list of files, directories, and wildcard patterns to cache and restore
          path: 
          # An explicit key for restoring and saving the cache
          key: 
          # An ordered multiline string listing the prefix-matched keys, that are used for restoring stale cache if no cache hit occurred for key.
          restore-keys: # optional
          # The chunk size used to split up large files during upload, in bytes
          upload-chunk-size: # optional
          # When enabled, allows windows runners to save or restore caches across platforms
          enableCrossOsArchive: # optional, default is false
          # Fail the workflow if cache entry is not found
          fail-on-cache-miss: # optional, default is false
          # Check if a cache entry exists for the given input(s) without downloading the cache
          lookup-only: # optional, default is false
          # Save cache even if another step before fails
          save-always: # optional, default is false

      - name: Setup Node.js environment
        uses: actions/setup-node@v4.3.0
        with:
          # Set always-auth in npmrc.
          always-auth: false # optional, default is false
          # Version spec of Node.js
          node-version: # optional
          # File containing the version spec of Node.js
          node-version-file: # optional
          # Target architecture for Node.js
          architecture: # optional
          # Check for the latest available version that satisfies the version spec
          check-latest: # optional
          # Optional registry for authentication
          registry-url: # optional
          # Optional scope for authenticating against scoped registries
          scope: # optional
          # GitHub token for authenticating with the API
          token: # optional
          # Specify the package manager for caching (npm, yarn, pnpm)
          cache: # optional
          # Path to a dependency file (package-lock.json, yarn.lock, etc.)
          cache-dependency-path: # optional

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          # Artifact name
          name: # optional, default is "artifact"
          # A file, directory, or wildcard pattern that describes what to upload
          path: 
          # Behavior if no files are found using the provided path
          if-no-files-found: warn # Options: warn, error, ignore
          # Duration after which the artifact will expire (in days)
          retention-days: # optional
          # Compression level for the artifact (0 to 9)
          compression-level: # optional, default is 6
          # If true, delete an existing artifact with the same name before uploading a new one
          overwrite: # optional, default is false
          # Include hidden files in the artifact
          include-hidden-files: # optional, default is false

      - name: Download a Build Artifact
        uses: actions/download-artifact@v4.2.1
        with:
          # Name of the artifact to download (optional)
          name: # optional
          # Destination path for the downloaded artifact (default is $GITHUB_WORKSPACE)
          path: # optional
          # Glob pattern matching the artifacts to download (optional)
          pattern: # optional
          # Merge multiple artifacts into the same directory (optional, default is false)
          merge-multiple: # optional, default is false
          # GitHub token for authentication (optional)
          github-token: # optional
          # Repository to download artifacts from (optional)
          repository: # optional, default is ${{ github.repository }}
          # ID of the workflow run to download artifacts from (optional)
          run-id: # optional

      - name: Setup Go environment
        uses: actions/setup-go@v5.4.0
        with:
          # Go version to download and use
          go-version: # optional
          # Path to the go.mod or go.work file
          go-version-file: # optional
          # Always check for the latest version that satisfies the spec
          check-latest: # optional
          # Token for Go distribution (optional)
          token: # optional, default is ${{ github.token }}
          # Enable caching for Go dependencies
          cache: # optional, default is true

